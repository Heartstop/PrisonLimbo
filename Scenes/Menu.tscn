[gd_scene load_steps=22 format=2]

[ext_resource path="res://Assets/PrisonLimboBackground.png" type="Texture" id=1]
[ext_resource path="res://Assets/ArizoneUnicaseRegular-5dRZ.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://Assets/PrisonLimboSpriteSheet.png" type="Texture" id=3]
[ext_resource path="res://Scenes/SceneTransition.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scripts/Menu.cs" type="Script" id=5]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.75, 0.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, -0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;



void vertex() {
// Input:8
	vec3 n_out8p0 = vec3(UV,0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(0.75000, 0.75000, 0.50000);
	vec3 n_out4p0 = n_out8p0 * n_in4p1;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:7
	float n_in7p1 = -0.50000;
	float n_out7p0 = n_out2p0 * n_in7p1;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + vec3(n_out7p0);

// Output:0
	UV = n_out5p0.xy;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -452.159, 28 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 920, 120 )
nodes/vertex/2/node = SubResource( 1 )
nodes/vertex/2/position = Vector2( 100, 240 )
nodes/vertex/4/node = SubResource( 2 )
nodes/vertex/4/position = Vector2( 340, 100 )
nodes/vertex/5/node = SubResource( 3 )
nodes/vertex/5/position = Vector2( 540, 100 )
nodes/vertex/7/node = SubResource( 4 )
nodes/vertex/7/position = Vector2( 340, 220 )
nodes/vertex/8/node = SubResource( 5 )
nodes/vertex/8/position = Vector2( 100, 120 )
nodes/vertex/connections = PoolIntArray( 4, 0, 5, 0, 7, 0, 5, 1, 5, 0, 0, 1, 8, 0, 4, 0, 2, 0, 7, 0 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
uniform float outline_width = 2.0;
uniform vec4 outline_color: hint_color;

void fragment(){
    vec4 col = texture(TEXTURE, UV);
    vec2 ps = TEXTURE_PIXEL_SIZE * outline_width;
    float a;
    float maxa = col.a;
    float mina = col.a;


    for(float x = -1.0; x <= 1.0; x+=0.05) {
        float y = 1.0 - (x*x);
        if(vec2(x,y) == vec2(0.0)) {
            continue; // ignore the center of kernel
        }

        a = texture(TEXTURE, UV + vec2(x,y)*ps).a;
        maxa = max(a, maxa); 
        mina = min(a, mina);
    }

    for(float x = -1.0; x <= 1.0; x+=0.05) {
        float y = -1.0 + (x*x);
        if(vec2(x,y) == vec2(0.0)) {
            continue; // ignore the center of kernel
        }

        a = texture(TEXTURE, UV + vec2(x,y)*ps).a;
        maxa = max(a, maxa); 
        mina = min(a, mina);
    }


    // Fill transparent pixels only, don't overlap texture
    if(col.a < 0.5) {
        COLOR = mix(col, outline_color, maxa-mina);
    } else {
        COLOR = col;
    }
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/outline_width = 0.2
shader_param/outline_color = Color( 1, 1, 1, 1 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 3 )
region = Rect2( 1, 236, 14, 17 )

[sub_resource type="DynamicFont" id=11]
size = 33
outline_size = 3
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
extra_spacing_char = -1
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=12]
size = 27
outline_size = 2
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
extra_spacing_char = -1
font_data = ExtResource( 2 )

[sub_resource type="Animation" id=13]
resource_name = "Text Size"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:custom_fonts/font:size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 27, 30, 27 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rect_scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.2, 1.2 ), Vector2( 1, 1 ) ]
}

[sub_resource type="DynamicFont" id=17]
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0.352941, 0.411765, 0.533333, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4
expand_margin_left = 4.0
expand_margin_right = 4.0
expand_margin_top = 4.0
expand_margin_bottom = 4.0
shadow_size = 1
shadow_offset = Vector2( 1, 1 )

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0.2, 0.235294, 0.341176, 1 )

[node name="MenuController" type="Node"]
script = ExtResource( 5 )

[node name="MarginContainer" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fullrect" type="MarginContainer" parent="MarginContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" type="TextureRect" parent="MarginContainer/Fullrect"]
material = SubResource( 7 )
margin_right = 1920.0
margin_bottom = 1080.0
texture = ExtResource( 1 )
expand = true
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_top = -75.5
margin_bottom = 75.5
custom_constants/separation = 23
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="MarginContainer/VBoxContainer"]
show_behind_parent = true
material = SubResource( 9 )
margin_right = 1920.0
margin_bottom = 100.0
rect_min_size = Vector2( 0, 100 )
texture = SubResource( 10 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MenuText" type="Label" parent="MarginContainer/VBoxContainer"]
margin_top = 123.0
margin_right = 1920.0
margin_bottom = 170.0
custom_fonts/font = SubResource( 11 )
text = "Breakout Chad"
align = 1

[node name="MarginContainer" type="CenterContainer" parent="MarginContainer/VBoxContainer"]
margin_left = 649.0
margin_top = 193.0
margin_right = 1270.0
margin_bottom = 232.0
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="StartText" type="Label" parent="MarginContainer/VBoxContainer/MarginContainer"]
margin_right = 621.0
margin_bottom = 39.0
rect_pivot_offset = Vector2( 310, 19 )
size_flags_vertical = 1
custom_fonts/font = SubResource( 12 )
text = "Press Space to Start"
align = 1
valign = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="MarginContainer/VBoxContainer/MarginContainer/StartText"]
autoplay = "Text Size"
playback_speed = 0.2
"anims/Text Size" = SubResource( 13 )

[node name="VboxSliders" type="VBoxContainer" parent="MarginContainer"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -517.0
margin_top = 20.0
margin_right = -4.0
margin_bottom = 112.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HboxMusic" type="HBoxContainer" parent="MarginContainer/VboxSliders"]
margin_right = 514.0
margin_bottom = 24.0
custom_constants/separation = 12

[node name="Label" type="Label" parent="MarginContainer/VboxSliders/HboxMusic"]
margin_right = 270.0
margin_bottom = 24.0
rect_min_size = Vector2( 270, 0 )
custom_fonts/font = SubResource( 17 )
text = "Music Volume"
align = 2

[node name="HSlider" type="HSlider" parent="MarginContainer/VboxSliders/HboxMusic"]
margin_left = 282.0
margin_right = 502.0
margin_bottom = 23.0
rect_min_size = Vector2( 220, 23 )
custom_styles/slider = SubResource( 15 )
custom_styles/grabber_area = SubResource( 16 )
min_value = -80.0
max_value = 0.0

[node name="HboxEffects" type="HBoxContainer" parent="MarginContainer/VboxSliders"]
margin_top = 28.0
margin_right = 514.0
margin_bottom = 52.0
custom_constants/separation = 12

[node name="Label" type="Label" parent="MarginContainer/VboxSliders/HboxEffects"]
margin_right = 270.0
margin_bottom = 24.0
rect_min_size = Vector2( 270, 0 )
custom_fonts/font = SubResource( 17 )
text = "Effects Volume"
align = 2
__meta__ = {
"_editor_description_": ""
}

[node name="HSlider" type="HSlider" parent="MarginContainer/VboxSliders/HboxEffects"]
margin_left = 282.0
margin_right = 502.0
margin_bottom = 23.0
rect_min_size = Vector2( 220, 23 )
custom_styles/slider = SubResource( 15 )
custom_styles/grabber_area = SubResource( 16 )
min_value = -80.0
max_value = 0.0
__meta__ = {
"_editor_description_": ""
}

[node name="SceneTransition" parent="." instance=ExtResource( 4 )]
mouse_filter = 2
[connection signal="value_changed" from="MarginContainer/VboxSliders/HboxMusic/HSlider" to="." method="MusicValueChanged"]
[connection signal="value_changed" from="MarginContainer/VboxSliders/HboxEffects/HSlider" to="." method="EffectValueChanged"]
